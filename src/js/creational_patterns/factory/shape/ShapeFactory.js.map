{"version":3,"sources":["creational_patterns/factory/shape/ShapeFactory.ts"],"names":[],"mappings":";AACA,uBAAqB,iBAAiB,CAAC,CAAA;AACvC,0BAAwB,oBAAoB,CAAC,CAAA;AAC7C,uBAAqB,iBAAiB,CAAC,CAAA;AACvC,wBAAsB,kBAAkB,CAAC,CAAA;AAEzC;IAAA;IAaA,CAAC;IAZiB,qBAAQ,GAAtB,UAAwB,SAAiB;QACrC,MAAM,CAAC,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAC9B,KAAK,QAAQ;gBACT,MAAM,CAAC,IAAI,eAAM,EAAE,CAAC;YACxB,KAAK,WAAW;gBACZ,MAAM,CAAC,IAAI,qBAAS,EAAE,CAAC;YAC3B,KAAK,QAAQ;gBACT,MAAM,CAAC,IAAI,eAAM,EAAE,CAAC;YACxB;gBACI,MAAM,CAAC,IAAI,iBAAO,EAAE,CAAC;QAC7B,CAAC;IACL,CAAC;IACL,mBAAC;AAAD,CAbA,AAaC,IAAA;AAbY,oBAAY,eAaxB,CAAA","file":"ShapeFactory.js","sourcesContent":["import {IShape} from './IShape';\nimport {Circle} from './shapes/Circle';\nimport {Rectangle} from './shapes/Rectangle';\nimport {Square} from './shapes/Square';\nimport {Default} from './shapes/Default';\n\nexport class ShapeFactory {\n    public static getShape (shapeType: string): IShape {\n        switch (shapeType.toLowerCase()) {\n            case 'circle':\n                return new Circle();\n            case 'rectangle':\n                return new Rectangle();\n            case 'square':\n                return new Square();\n            default:\n                return new Default();\n        }\n    }\n}\n"]}